{"mappings":"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","sources":["src/ui.js","src/constants.js","src/gameState.js","src/buttons.js","src/init.js"],"sourcesContent":["export const modFox = function modFox(state) {\n  document.querySelector(\".fox\").className = `fox fox-${state}`;\n};\n\nexport const modScene = function modScene(state) {\n  document.querySelector(\".game\").className = `game ${state}`;\n};\n\nexport const togglePoopBag = function togglePoopBag(show) {\n  document.querySelector(\".poop-bag\").classList.toggle(\"hidden\", !show);\n};\n\nexport const writeModal = function writeModal(text = \"\") {\n  document.querySelector(\n    \".modal\"\n  ).innerHTML = `<div class=\"modal-inner\">${text}</div>`;\n};\n","export const TICK_RATE = 3000;\nexport const ICONS = [\"fish\", \"poop\", \"weather\"];\nexport const RAIN_CHANCE = 0.2;\nexport const SCENES = [\"day\", \"rain\"];\nexport const DAY_LENGTH = 20;\nexport const NIGHT_LENGTH = 5;\n\nexport const getNextHungerTime = (clock) =>\n  Math.floor(Math.random() * 3) + 5 + clock;\nexport const getNextDieTime = (clock) =>\n  Math.floor(Math.random() * 2) + 3 + clock;\nexport const getNextPoopTime = (clock) =>\n  Math.floor(Math.random() * 3) + 4 + clock;\n","import { modFox, modScene, togglePoopBag, writeModal } from \"./ui\";\nimport {\n  RAIN_CHANCE,\n  SCENES,\n  DAY_LENGTH,\n  NIGHT_LENGTH,\n  getNextDieTime,\n  getNextHungerTime,\n  getNextPoopTime,\n} from \"./constants\";\n\nconst gameState = {\n  current: \"INIT\",\n  clock: 1,\n  wakeTime: -1,\n  sleepTime: -1,\n  hungryTime: -1,\n  poopTime: -1,\n  dieTime: -1,\n  timeToStartCelebrating: -1,\n  timeToEndCelebrating: -1,\n  tick() {\n    this.clock++;\n\n    if (this.clock === this.wakeTime) {\n      this.wake();\n    } else if (this.clock === this.sleepTime) {\n      this.sleep();\n    } else if (this.clock === this.hungryTime) {\n      this.getHungry();\n    } else if (this.clock === this.dieTime) {\n      this.die();\n    } else if (this.clock === this.timeToStartCelebrating) {\n      this.startCelebrating();\n    } else if (this.clock === this.timeToEndCelebrating) {\n      this.endCelebrating();\n    } else if (this.clock === this.poopTime) {\n      this.poop();\n    }\n\n    return this.clock;\n  },\n  startGame() {\n    this.current = \"HATCHING\";\n    this.wakeTime = this.clock + 3;\n    modFox(\"egg\");\n    modScene(\"day\");\n    writeModal();\n  },\n  wake() {\n    this.current = \"IDLING\";\n    this.wakeTime = -1;\n    modFox(\"idling\");\n    this.scene = Math.random() > RAIN_CHANCE ? 0 : 1;\n    modScene(SCENES[this.scene]);\n    this.sleepTime = this.clock + DAY_LENGTH;\n    this.hungryTime = getNextHungerTime(this.clock);\n    this.determineFoxState();\n  },\n  sleep() {\n    this.current = \"SLEEP\";\n    modFox(\"sleep\");\n    modScene(\"night\");\n    this.clearTimes();\n    this.wakeTime = this.clock + NIGHT_LENGTH;\n  },\n  clearTimes() {\n    this.wakeTime = -1;\n    this.sleepTime = -1;\n    this.hungryTime = -1;\n    this.dieTime = -1;\n    this.poopTime = -1;\n    this.timeToStartCelebrating = -1;\n    this.timeToEndCelebrating = -1;\n  },\n  getHungry() {\n    this.current = \"HUNGRY\";\n    this.dieTime = getNextDieTime(this.clock);\n    this.hungryTime = -1;\n    modFox(\"hungry\");\n  },\n  poop() {\n    this.current = \"POOPING\";\n    this.poopTime = -1;\n    this.dieTime = getNextDieTime;\n    modFox(\"pooping\");\n  },\n  die() {\n    this.current = \"DEAD\";\n    modScene(\"dead\");\n    modFox(\"dead\");\n    this.clearTimes();\n    writeModal(\"The fox died :( <br/> Press the middle button to start\");\n  },\n  startCelebrating() {\n    this.current = \"CELEBRATING\";\n    modFox(\"celebrate\");\n    this.timeToStartCelebrating = -1;\n    this.timeToEndCelebrating = this.clock + 2;\n  },\n  endCelebrating() {\n    this.timeToEndCelebrating = -1;\n    this.current = \"IDLING\";\n    this.determineFoxState();\n    togglePoopBag(false);\n  },\n  determineFoxState() {\n    if (this.current === \"IDLING\") {\n      if (SCENES[this.scene] === \"rain\") {\n        modFox(\"rain\");\n      } else {\n        modFox(\"idling\");\n      }\n    }\n  },\n  handleUserAction(icon) {\n    if (\n      [\"SLEEP\", \"FEEDING\", \"CELEBRATING\", \"HATCHING\"].includes(this.current)\n    ) {\n      // do nothing\n      return;\n    }\n\n    if (this.current === \"INIT\" || this.current === \"DEAD\") {\n      this.startGame();\n      return;\n    }\n\n    switch (icon) {\n      case \"weather\":\n        this.changeWeather();\n        break;\n      case \"poop\":\n        this.cleanUpPoop();\n        break;\n      case \"fish\":\n        this.feed();\n        break;\n    }\n  },\n  changeWeather() {\n    this.scene = (this.scene + 1) % SCENES.length;\n    modScene(SCENES[this.scene]);\n    this.determineFoxState();\n  },\n  cleanUpPoop() {\n    if (!this.current === \"POOPING\") {\n      return;\n    }\n\n    this.dieTime = -1;\n    togglePoopBag(true);\n    this.startCelebrating();\n    this.hungryTime = getNextHungerTime(this.clock);\n  },\n  feed() {\n    if (this.current !== \"HUNGRY\") {\n      return;\n    }\n\n    this.current = \"FEEDING\";\n    this.dieTime = -1;\n    this.poopTime = getNextPoopTime(this.clock);\n    modFox(\"eating\");\n    this.timeToStartCelebrating = this.clock + 2;\n  },\n};\n\nexport const handleUserAction = gameState.handleUserAction.bind(gameState);\nexport default gameState;\n","import { ICONS } from \"./constants\";\n\nconst toggleHighlighted = (icon, show) =>\n  document\n    .querySelector(`.${ICONS[icon]}-icon`)\n    .classList.toggle(\"highlighted\", show);\n\nexport default function initButtons(handleUserAction) {\n  let selectedIcon = 0;\n\n  function buttonClick({ target }) {\n    if (target.classList.contains(\"left-btn\")) {\n      toggleHighlighted(selectedIcon, false);\n      selectedIcon = (2 + selectedIcon) % ICONS.length;\n      toggleHighlighted(selectedIcon, true);\n    } else if (target.classList.contains(\"right-btn\")) {\n      toggleHighlighted(selectedIcon, false);\n      selectedIcon = (1 + selectedIcon) % ICONS.length;\n      toggleHighlighted(selectedIcon, true);\n    } else {\n      handleUserAction(ICONS[selectedIcon]);\n    }\n  }\n\n  document.querySelector(\".buttons\").addEventListener(\"click\", buttonClick);\n}\n","import game, { handleUserAction } from \"./gameState\";\nimport { TICK_RATE } from \"./constants\";\nimport initButtons from \"./buttons\";\n\nasync function init() {\n  console.log(\"starting game\");\n\n  initButtons(handleUserAction);\n\n  let nextTimeToTick = Date.now();\n\n  function nextAnimationFrame() {\n    const now = Date.now();\n\n    if (nextTimeToTick <= now) {\n      game.tick();\n      nextTimeToTick = now + TICK_RATE;\n    }\n\n    requestAnimationFrame(nextAnimationFrame);\n  }\n\n  nextAnimationFrame();\n}\n\ninit();\n"],"names":["$ea23bd7a63c9796f$export$31edf49e44578506","state","document","querySelector","className","$ea23bd7a63c9796f$export$1f9518c2c59b8e99","$ea23bd7a63c9796f$export$7ee9422b060e0e7b","show","classList","toggle","$ea23bd7a63c9796f$export$cd949469e93f219e","text","innerHTML","$30527df661259f19$export$fde44257752a9f60","$30527df661259f19$export$d3112996f706f1c","$30527df661259f19$export$57d09a4d1c60d13c","clock","Math","floor","random","$30527df661259f19$export$90ecfaab96696ff","$c9bfdfadb452e31c$var$gameState","current","wakeTime","sleepTime","hungryTime","poopTime","dieTime","timeToStartCelebrating","timeToEndCelebrating","tick","this","wake","sleep","getHungry","die","startCelebrating","endCelebrating","poop","startGame","scene","determineFoxState","clearTimes","handleUserAction","icon","includes","changeWeather","cleanUpPoop","feed","length","$c9bfdfadb452e31c$export$ccab573699251c80","bind","$c9bfdfadb452e31c$export$2e2bcd8739ae039","$30be943f8bd0d4a2$var$toggleHighlighted","console","log","selectedIcon","addEventListener","target","contains","$30be943f8bd0d4a2$export$2e2bcd8739ae039","nextTimeToTick","Date","now","nextAnimationFrame","requestAnimationFrame","$ed1f10388746f9c3$var$init"],"version":3,"file":"index.3d13846c.js.map"}